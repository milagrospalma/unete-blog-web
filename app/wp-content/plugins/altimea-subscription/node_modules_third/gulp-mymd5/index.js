var path = require('path')
	, gutil = require('gulp-util')
	, through = require('through2')
	, crypto = require('crypto');

module.exports = function(options) {
	var separator, size, hash, hashdefault = false;

	if (typeof options === 'object') {
		separator = options.separator || '_';
		hash = options.hash || hashdefault;
	} else {
		separator = '_';
		hash = options || hashdefault;
	}

	return through.obj(function(file, enc, cb) {
		if (file.isStream()) {
			this.emit('error', new gutil.PluginError('gulp-debug', 'Streaming not supported'));
			return cb();
		}

		var md5Hash = hash,
			filename = path.basename(file.path),
			dir;

		if (md5Hash === false){
			var md5 = crypto.createHash('md5');
			md5.update(file.contents, 'utf8');
			md5Hash = md5.digest('hex');
		}

		if (file.path[0] == '.') {
			dir = path.join(file.base, file.path);
		} else {
			dir = file.path;
		}
		dir = path.dirname(dir);

		filename = filename.split('.').map(function(item, i, arr) {
			return i == arr.length - 2 ? item + separator + md5Hash : item;
		}).join('.');

		file.path = path.join(dir, filename);

		this.push(file);
		cb();
	}, function(cb) {
		cb();
	});
};
